@model EZWork.Core.Entities.EZUser


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        <h4>EZUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EZAccount.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EZAccount.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.EZAccount.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EZAccount.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EZAccount.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.EZAccount.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ImageProfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-inline">
                @*@Html.EditorFor(model => model.ImageProfile, new { htmlAttributes = new { @class = "", @type = "file" } })*@
                <input type="text" name="picture" id="picture">
                <input type="file" id="fileUpload" accept="image/*" name="fileUpload" style="display:none;" >
                <input type="button" id="btnUpload" value="choise " class="btn btn-secondary">
                @*@Html.ValidationMessageFor(model => model.ImageProfile, "", new { @class = "text-danger" })*@
            </div>   
            <img id="pictureUpload" width="300">
            @section upload
                {
                <script>
                    $(function () {
                        //dăng kí sự kiên nut btnupload
                        $('#btnUpload').click(function () {
                            $('#fileUpload').trigger('click');
                        });
                        //bắt sự kiện change data của file upload
                        $('#fileUpload').change(function () {
                            //kieemr tra trinhf duyeetj cos hoox trợ FormData Object ko 
                            if (window.FormData !== undefined) {
                                //lấy dữ liệu trên fileUpload
                                var fileUpload = $('#fileUpload').get(0);
                                var files = fileUpload.files;
                                //tao doi tuong form data
                                var formData = new FormData();
                                //dua du lieu vao form
                                formData.append('file', files[0]);
                                $.ajax({
                                    type: 'POST',
                                    url: '/UserLogin1/UpdateProfileUser',
                                    contentType: false,//khong co header
                                    processData: false,//khong xu li du lieu
                                    data: formData,
                                    success: function (urlImage) {
                                        $('#pictureUpload').attr('src', urlImage);
                                        $('#picture').val(urlImage);
                                    },
                                    error: function (err) {
                                        alert('co loi upload'+ err.statusText);
                                    }
                                });
                            }
                        });
                    });
                </script>
                }
        </div>
       

        <div class="form-group">
            @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifierAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifierAt, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ModifierAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
